<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title> ClãsNaruto</title>
  <style>
    body {
      margin: 0;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
                   Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      background: #f5f5f5;
      color: #333;
    }
    #root {
      padding: 20px;
    }
    h1 {
      margin-bottom: 16px;
    }
    ul { list-style: none; padding: 0; }
    li { margin-bottom: 8px; }
    button {
      cursor: pointer;
      border: none;
      background: #1976d2;
      color: #fff;
      padding: 8px 12px;
      border-radius: 4px;
      transition: background 0.2s;
    }
    button:hover {
      background: #115293;
    }
    .overlay {
      position: fixed; inset: 0;
      background: rgba(0,0,0,0.6);
      color: #fff; padding: 20px;
      overflow-y: auto;
    }
    .overlay button {
      background: #e53935;
      margin-bottom: 20px;
    }
    .overlay button:hover {
      background: #ab000d;
    }
  </style>
</head>
<body>
  <div id="root"></div>

  <!-- React + ReactDOM -->
  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
  <!-- Axios -->
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <!-- Babel para JSX on-the-fly -->
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

  <script type="text/babel">
    const { useState, useEffect } = React;

    function ClanDetail({ clan, onClose }) {
      const [members, setMembers] = useState([]);
      const [loading, setLoading] = useState(true);
      const [error, setError] = useState(null);

      useEffect(() => {
        setLoading(true); setError(null);
        Promise.all(
          clan.characterIds.map(id =>
            axios.get(`https://api-dattebayo.vercel.app/characters/${id}`))
          )
        .then(responses => Promise.all(responses.map(res => res.data)))
        .then(list => {
          setMembers(list);
          setLoading(false);
        })
        .catch(err => {
          console.error(err);
          setError('Erro ao carregar membros');
          setLoading(false);
        });
      }, [clan]);

      return (
        <div className="overlay">
          <button onClick={onClose}>← Fechar detalhes</button>
          <h2>{clan.name}</h2>
          <p><strong>ID do clã:</strong> {clan.id}</p>
          <p><strong>Total de membros:</strong> {clan.characterIds.length}</p>

          {loading && <p>Carregando membros…</p>}
          {error && <p style={{color:'salmon'}}>{error}</p>}

          {!loading && !error && (
            <ul>
              {members.map(m => (
                <li key={m.id}>#{m.id} — {m.name}</li>
              ))}
            </ul>
          )}
        </div>
      );
    }

    function App() {
      const [clans, setClans] = useState([]);
      const [selectedClan, setSelectedClan] = useState(null);
      const [loading, setLoading] = useState(true);
      const [error, setError] = useState(null);

      useEffect(() => {
        axios.get('https://api-dattebayo.vercel.app/clans')
          .then(res => {
            setClans(res.data);
            setLoading(false);
          })
          .catch(err => {
            console.error(err);
            setError('Falha ao carregar clãs');
            setLoading(false);
          });
      }, []);

      if (loading) return <p>Carregando clãs…</p>;
      if (error)   return <p style={{color:'red'}}>{error}</p>;

      return (
        <>
          <h1>Clãs Naruto</h1>
          <ul>
            {clans.map(clan => (
              <li key={clan.id}>
                <button onClick={() => setSelectedClan(clan)}>
                  {clan.name}
                </button>
              </li>
            ))}
          </ul>
          {selectedClan && (
            <ClanDetail
              clan={selectedClan}
              onClose={() => setSelectedClan(null)}
            />
          )}
        </>
      );
    }

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<App />);
  </script>
</body>
</html>
setMembers(list);
});
